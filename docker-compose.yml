version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: fido-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: fido
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fido-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: fido-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/fido?authSource=admin
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: http://localhost:80
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    networks:
      - fido-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend (Nginx)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: fido-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - fido-network
    volumes:
      - ./frontend:/usr/share/nginx/html

  # Full Application (Alternative single container)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fido-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/fido?authSource=admin
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8080:80"
      - "3001:3000"
    depends_on:
      - mongodb
    networks:
      - fido-network
    profiles:
      - single-container

volumes:
  mongodb_data:

networks:
  fido-network:
    driver: bridge